services:
  - type: web
    name: django
    env: docker
    dockerfilePath: Dockerfile.django.dev
    envVars:
      - key: DB_USER
        fromEnvFile: .env
      - key: DB_PASSWORD
        fromEnvFile: .env
    buildCommand: ""
    startCommand: "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    healthCheckPath: /
    httpPort: 8000
    disk:
      name: django-data
      mountPath: /app
      sizeGB: 1
    dependsOn:
      - postgres

  - type: pserv
    name: postgres
    env: docker
    image: postgres:14
    envVars:
      - key: POSTGRES_USER
        fromEnvFile: .env
      - key: POSTGRES_PASSWORD
        fromEnvFile: .env
    disk:
      name: postgres-data
      mountPath: /var/lib/postgresql/data
      sizeGB: 1
    healthCheckCommand: pg_isready -U $DB_USER
    healthCheckInterval: 10s
    healthCheckTimeout: 5s
    healthCheckMaxRetries: 10

envVarGroups:
  - name: django-env
    envFile: .env

networks:
  - name: webnet
    internal: false