name: DRF CI

on:
  pull_request:
    branches: [ "backend" ]
  push:
    branches: [ "backend" ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libpq-dev gcc git postgresql-client
    
    - name: Install Python Dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run Migrations
      working-directory: ./backend
      env:
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_HOST: localhost
        DB_PORT: 5432
        DJANGO_SETTINGS_MODULE: config.settings
        google_api_key: ${{ secrets.GOOGLE_API_KEY }}
        DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        DJANGO_DEBUG: ${{ secrets.DJANGO_DEBUG }}
        DJANGO_ALLOWED_HOSTS: ${{ secrets.DJANGO_ALLOWED_HOSTS }}
      run: |
        python manage.py makemigrations myapi
        python manage.py migrate
        
    - name: Run Tests
      working-directory: ./backend
      env:
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_HOST: localhost
        DB_PORT: 5432
        DJANGO_SETTINGS_MODULE: config.settings
        google_api_key: ${{ secrets.GOOGLE_API_KEY }}
        DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        DJANGO_DEBUG: ${{ secrets.DJANGO_DEBUG }}
        DJANGO_ALLOWED_HOSTS: ${{ secrets.DJANGO_ALLOWED_HOSTS }}
      run: |
        python manage.py test

    - name: Run Linting
      working-directory: ./backend
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --statistics --max-line-length=150
